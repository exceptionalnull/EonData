Description: Creates the EonData.net website
Parameters:
    HostKeyPair:
        Description: The EC2 KeyPair to use when creating the bastion host instances.
        Type: AWS::EC2::KeyPair::KeyName
        Default: eondata-web
    EonDataWebAppBucketName:
        Description: Name of the S3 bucket that will host the angular webapp.
        Type: String
        Default: eondata-web
    EonDataWebDataBucketName:
        Description: Name of the S3 bucket that stores data used by the website.
        Type: String
        Default: eondata-web-data
    BastionSecurityGroupId:
        Description: The security group id the bastion host belongs to.
        Type: String
    TargetVPC:
        Description: VPC to launch the bastion host in.
        Type: AWS::EC2::VPC::Id
    WebHostInstanceType:
        Description: The EC2 instance type to use when creating the bastion host.
        Type: String
        Default: t4g.small
    WebHostSubnets:
        Description: The subnets to deploy the web host instances to. These should be private subnets.
        Type: List<AWS::EC2::Subnet::Id>
    # get the latest amazon linux 2 ami id
    LatestAmiId:
        Description: This is the latest Amazon Linux 2 AMI which will be used for the EC2 instances.
        Type: 'AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>'
        Default: '/aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2'
Resources:
    EonDataWebAppS3Bucket:
        Type: AWS::S3::Bucket
        Properties:
            BucketName: !Ref EonDataWebAppBucketName
            AccessControl: PublicRead
            WebsiteConfiguration:
                IndexDocument: index.html
    EonDataWebDataS3Bucket:
        Type: AWS::S3::Bucket
        Properties:
            BucketName: !Ref EonDataWebDataBucketName
            AccessControl: Private
    # EonDataWebHostEC2Security:
    #     Type: AWS::EC2::SecurityGroup
    #     Properties:
    #       GroupName: EonDreamWebServerSecurityGroup
    #       GroupDescription: Controls access to the eondream website web ec2 servers.
    #       VpcId: !Ref TargetVPC
    # EonDataWebHostAllowSSH:
    #     Type: AWS::EC2::SecurityGroupIngress
    #     GroupId: !GetAtt EonDataWebHostEC2Security.GroupId