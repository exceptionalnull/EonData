Description: Creates the EonData.net website
Parameters:
    WebHostKeyPair:
        Description: The EC2 KeyPair to use when creating the web host instances.
        Type: AWS::EC2::KeyPair::KeyName
        Default: eondata-web
    EonDataWebAppBucketName:
        Description: Name of the S3 bucket that will host the angular webapp.
        Type: String
        Default: eondataweb
    EonDataWebDataBucketName:
        Description: Name of the S3 bucket that stores data used by the website.
        Type: String
        Default: eondataweb-data
    EonDataWebAppCertArn:
        Description: ARN of the certificate to use for the webapp. This needs to be deployed to us-east-1 to work with CloudFront.
        Type: String
    EonDataWebApiCertArn:
        Description: ARN of the certificate to use for the webapp. This needs to be deployed to us-east-1 to work with CloudFront.
        Type: String
    BastionSecurityGroupId:
        Description: The security group id the bastion host belongs to.
        Type: String
    TargetVPC:
        Description: VPC to launch the bastion host in.
        Type: AWS::EC2::VPC::Id
    WebHostInstanceType:
        Description: The EC2 instance type to use when creating the bastion host.
        Type: String
        Default: t3.small
    WebHostSubnets:
        Description: The subnets to deploy the web host instances to. These should be private subnets.
        Type: List<AWS::EC2::Subnet::Id>
    # get the latest amazon linux 2 ami id
    LatestAmiId:
        Description: This is the latest Amazon Linux 2 AMI which will be used for the EC2 instances.
        Type: 'AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>'
        Default: '/aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2'
Resources:
    EonDataWebAppS3Bucket:
        Type: AWS::S3::Bucket
        Properties:
            BucketName: !Ref EonDataWebAppBucketName
            AccessControl: PublicRead
            WebsiteConfiguration:
                IndexDocument: index.html
                ErrorDocument: index.html
    EonDataWebAppS3Policy:
        Type: AWS::S3::BucketPolicy
        Properties:
            Bucket: !Ref EonDataWebAppS3Bucket
            PolicyDocument:
                Version: "2012-10-17"
                Statement:
                    - Sid: "PublicReadGetObject"
                      Effect: "Allow"
                      Principal: "*"
                      Action: "s3:GetObject"
                      Resource: !Join ["", ["arn:aws:s3:::", !Ref EonDataWebAppBucketName, "/*"]]
    EonDataWebDataS3Bucket:
        Type: AWS::S3::Bucket
        DeletionPolicy: Retain
        Properties:
            BucketName: !Ref EonDataWebDataBucketName
            AccessControl: Private
            PublicAccessBlockConfiguration:
                BlockPublicAcls: true
                BlockPublicPolicy: true
                IgnorePublicAcls: true
                RestrictPublicBuckets: true
    EonDataWebAppCloudFrontDistribution:
        Type: AWS::CloudFront::Distribution
        Properties:
            DistributionConfig:
                Enabled: true
                Comment: EonData web app distribution
                HttpVersion: http2
                Aliases:
                    - www.eondata.net
                ViewerCertificate:
                    AcmCertificateArn: !Ref EonDataWebAppCertArn
                    SslSupportMethod: sni-only
                    MinimumProtocolVersion: TLSv1.2_2018
                DefaultRootObject: index.html
                Origins:
                    - Id: EonDataWebAppS3Origin
                      DomainName: !Sub ${EonDataWebAppBucketName}.s3.amazonaws.com
                      S3OriginConfig: {}
                    #     OriginAccessIdentity: ''
                    #   OriginCustomHeaders:
                    #     - HeaderName: Access-Control-Allow-Origin
                    #       HeaderValue: "'*'"
                      OriginPath: ''
                DefaultCacheBehavior:
                    TargetOriginId: EonDataWebAppS3Origin
                    ForwardedValues:
                        QueryString: false
                        Cookies:
                            Forward: none
                    ViewerProtocolPolicy: redirect-to-https
                    MinTTL: 0
                    AllowedMethods:
                        - GET
                        - HEAD
                        - OPTIONS
                    CachedMethods:
                        - GET
                        - HEAD
                    DefaultTTL: 3600
                    MaxTTL: 86400
                CustomErrorResponses:
                    - ErrorCode: 404
                      ResponsePagePath: /index.html
                      ResponseCode: '200'
                      ErrorCachingMinTTL: 300
    # EonDataWebApiCloudFrontDistribution:
    #     Type: AWS::CloudFront::Distribution
    #     Properties:
    #         DistributionConfig:

    EonDataWebLogGroup:
        Type: AWS::Logs::LogGroup
        Properties:
            LogGroupName: eondataweb
            RetentionInDays: 120
    EonDataApiHostEC2Security:
        Type: AWS::EC2::SecurityGroup
        Properties:
          GroupName: EonDataApiHostEC2Security
          GroupDescription: Controls access to the eondream website web ec2 servers.
          VpcId: !Ref TargetVPC
    EonDataApiHostAllowBastionSSH:
        Type: AWS::EC2::SecurityGroupIngress
        Properties:
            Description: Allows SSH access to the API hosts from the bastion server.
            GroupId: !GetAtt EonDataApiHostEC2Security.GroupId
            IpProtocol: tcp
            FromPort: 22
            ToPort: 22
            SourceSecurityGroupId: !Ref BastionSecurityGroupId
    EonDataApiHostLaunchTemplate:
        Type: AWS::EC2::LaunchTemplate
        Properties:
            LaunchTemplateName: EonDataApiHostTemplate
            LaunchTemplateData:
                ImageId: !Ref LatestAmiId
                InstanceInitiatedShutdownBehavior: terminate
                InstanceType: !Ref WebHostInstanceType
                IamInstanceProfile:
                    Arn: !GetAtt EonDataApiHostIAMProfile.Arn
                CreditSpecification:
                    CpuCredits: standard
                KeyName: !Ref WebHostKeyPair
                SecurityGroupIds:
                - !Ref EonDataApiHostEC2Security
                UserData:
                  Fn::Base64: !Sub |
                    #!/bin/bash
                    yum update -y
                    yum install -y aws-cfn-bootstrap
                    /opt/aws/bin/cfn-init --stack ${AWS::StackName} --resource EonDataApiHostLaunchTemplate --region ${AWS::Region} --configsets Setup
        Metadata:
            AWS::CloudFormation::Init:
                configSets:
                    Setup:
                      - init
                    #   - inst
                    #   - strt
                init:
                  packages:
                    yum:
                      awslogs: []
                      jq: []
                      htop: []
                  files:
                    /etc/awslogs/awscli.conf:
                        mode: "000400"
                        content: !Sub |
                            [plugins]
                            cwlogs = cwlogs
                            [default]
                            region = ${AWS::Region}
                    /etc/awslogs/awslogs.conf:
                        mode: "000400"
                        content: !Sub |
                            [general]
                            state_file = /var/lib/awslogs/agent-state
                            use_gzip_http_content_encoding = true
                            queue_size = 10

                            [cfn-init]
                            file = /var/log/cfn-init.log
                            log_group_name = ${EonDataWebLogGroup}
                            log_stream_name = api cfn-init {instance_id}
                            datetime_format = %Y-%m-%d %H:%M:%S,%f
                            time_zone = UTC
                            multi_line_start_pattern = {datetime_format}

                            [sshd]
                            file = /var/log/secure
                            log_group_name = ${EonDataWebLogGroup}
                            log_stream_name = api sshd {instance_id}
                            datetime_format = %b %d %H:%M:%S
                  commands:
                    awslogsenabl:
                        command: systemctl enable awslogsd
                    awslogsstart:
                        command: systemctl start awslogsd
    EonDataApiHostEC2AutoScale:
        Type: AWS::AutoScaling::AutoScalingGroup
        Properties:
            AutoScalingGroupName: EonDataApiHostAutoScaling
            DesiredCapacity: 1
            MinSize: 0
            MaxSize: 1
            Cooldown: 90
            VPCZoneIdentifier: !Ref WebHostSubnets
            LaunchTemplate:
                LaunchTemplateId: !Ref EonDataApiHostLaunchTemplate
                Version: 1
    EonDataApiHostIAMRole:
        Type: AWS::IAM::Role
        Properties:
            RoleName: EonDataApiHostIAMRole
            AssumeRolePolicyDocument:
              Version: "2012-10-17"
              Statement:
                - Effect: Allow
                  Principal:
                    Service:
                      - ec2.amazonaws.com
                  Action:
                    - sts:AssumeRole
            Path: "/"
    EonDataWebIAMPolicyWriteLogs:
        Type: AWS::IAM::Policy
        Properties:
            PolicyName: EonDataWebIAMPolicyWriteLogs
            Roles:
                - !Ref EonDataApiHostIAMRole
            PolicyDocument:
                Version: "2012-10-17"
                Statement:
                    - Sid: EonDataWebIAMPolicyWriteLogs
                      Effect: Allow
                      Action:
                        - logs:CreateLogGroup
                        - logs:CreateLogStream
                        - logs:DescribeLogGroups
                        - logs:PutLogEvents
                      Resource:
                        - 'arn:aws:logs:*:*:log-group:eondataweb:*'
    EonDataApiHostIAMProfile:
        Type: AWS::IAM::InstanceProfile
        Properties:
            InstanceProfileName: EonDataApiHostIAMProfile
            Roles:
              - !Ref EonDataApiHostIAMRole